pipeline {
    agent any // Specifies that this pipeline can run on any available agent.
    stages {
        stage('Clone Repo') { // Stage to clone the repository.
            steps {
                // Clone the repository containing the code.
                git 'https://github.com/himangshu12345/Jenkins_nginx.git'
            }
        }
        stage('Test HTML') { // Stage to test and validate the HTML code.
            steps {
                // Validate index.html using htmlhint. 
                // Use || true to prevent the pipeline from failing due to validation warnings.
                sh 'htmlhint index.html || true'
            }
        }
        stage('Build Docker Image') { // Stage to build the Docker image.
            steps {
                // Build a Docker image named 'mynginximage' from the current directory.
                sh 'docker build -t mynginximage .'
            }
        }
        stage('Image Scan') { // Stage to scan the Docker image for vulnerabilities.
            steps {
                // Scan the built Docker image using Trivy.
                // Use || true to allow the pipeline to continue even if vulnerabilities are found.
                sh 'trivy image mynginximage || true'
            }
        }
        stage('Push Docker Image') { // Stage to push the Docker image to Docker Hub.
            steps {
                // Login to Docker Hub using credentials stored in Jenkins.
                withCredentials([string(credentialsId: 'DOCKER_HUB_PASWD', variable: 'DOCKER_HUB_PASWD')]) {
                    sh 'docker login -u himangshu12 -p $DOCKER_HUB_PASWD'
                }
                // Tag the Docker image with the repository name.
                sh 'docker tag mynginximage himangshu12/jenkins_cicd'
                // Push the Docker image to Docker Hub.
                sh 'docker push himangshu12/jenkins_cicd'
            }
        }
        stage('Deploy Container') { // Stage to deploy the Docker container.
            steps {
                // Run a Docker container from the pushed image, mapping port 9090 to port 80 in the container.
                sh 'docker run -d -p 9090:80 himangshu12/jenkins_cicd'
            }
        }
    }
}
